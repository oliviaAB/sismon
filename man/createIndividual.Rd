% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/in_silico_population.R
\name{createIndividual}
\alias{createIndividual}
\title{Creates an in silico individual.}
\usage{
createIndividual(variantsList, variantsFreq, indargs, sysargs,
  sameInit = F)
}
\arguments{
\item{variantsList}{A named list giving the variants segregating in the population for each gene (e.g. created by \code{\link{createVariants}}). Each element corresponds to one gene in the system (name of the element = gene ID).
Each element is a matrix, in which each column represents a variant of the gene segregating in the population. The rows represent the QTL effect coefficients of each variant
(i.e. the impact of each mutation the variant carries).}

\item{variantsFreq}{A named list giving for each gene the allelic frequency of each segregating variant. Each element corresponds to one gene in the system (name of the element = gene ID).
Each element is a vector, of length equal to the number of variants of the gene segregating in the population, giving the allele frequency of each of the variants.}

\item{indargs}{An object of class \code{\link{insilicoindividualargs}} (i.e. a list with parameters for in silico individuals generation).}

\item{sysargs}{An object of class \code{\link{insilicosystemargs}} (i.e. a list with parameters for in silico system generation).}

\item{sameInit}{Boolean. Does the individual have identical initial abundance to the rest of the population?}
}
\value{
An object of class \code{insilicoindividual}, that is a list composed of:
\itemize{
\item \code{QTLeffects}: a list of the variants carried by the individual. 1st level of the list: the different "GCN" (Gene Copy Number),
that is the different alleles of the genes (as defined by the ploidy of the individual: a diploid will have GCN1 and GCN2); 2nd level: the different QTL effect coefficients. The elements
in this 2nd-level list are vectors of QTL effect coefficients for the different genes (coefficient for gene \code{i} at the \code{i}-th position
in the vector).
\item \code{haplotype}: data-frame (rows = genes, columns = Gene copy number) giving the ID of the gene variant carried by the individual for each gene copy number (allele).
\item \code{InitVar}: a list of the multiplicative coefficients to compute the initial abundance of the different molecules
(to be applied to the population mean initial abundance for the corresponding molecule). 1st level of the list: the different "GCN" (Gene Copy Number),
that is the different alleles of the genes (as defined by the ploidy of the individual: a diploid will have GCN1 and GCN2); 2nd level of the list:
vectors of the coefficients for the proteins ("P") and RNAs ("R") of the genes (coefficient for gene \code{i} at the \code{i}-th position in the vectors).
}
}
\description{
Creates a in silico individual to be simulated (object of class \code{insilicoindividual}).
}
\examples{
sysargs = insilicosystemargs(ploidy = 4)
indargs = insilicoindividualargs()
## We will create only 1 variant of gene 1, 3 variants of gene 2 and
## 2 variants of gene 3
nbvariants = c(1, 3, 2)

qtlnames = c("qtlTCrate", "qtlRDrate",
             "qtlTCregbind", "qtlRDregrate",
             "qtlactivity", "qtlTLrate",
             "qtlPDrate", "qtlTLregbind",
             "qtlPDregrate", "qtlPTMregrate")

genvariants = lapply(nbvariants, function(x){
  matrix(1, nrow = length(qtlnames), ncol = x,
         dimnames = list(qtlnames, 1:x))
})
names(genvariants) = 1:length(nbvariants)

## the 2nd variant of gene 2 has a mutation reducing its transcription rate by 3
genvariants$`2`["qtlTCrate", 2] = 0.33
## and the 3rd variant has an increased translation rate
genvariants$`2`["qtlTLrate", 2] = 1.5

## The 2nd variant of gene 3 has a mutation decreasing the activity of
## its active product
genvariants$`3`["qtlactivity", 2] = 0.7

## Allelic frequency of each variant
genvariants.freq = list('1' = c(1),
                        '2' = c(0.6, 0.3, 0.1),
                        '3' = c(0.9, 0.1))

myind = createIndividual(genvariants, genvariants.freq, indargs, sysargs)
}
